{"mappings":"AAAA,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,SAAS,SAAS,aAAa,CAAC;AAGtC,uDAAuD;AACvD,6FAA6F;AAC7F,qHAAqH;AACrH,SAAS;IACL,OAAO,SAAS,CAAC,MAAM,CAAC;AAC5B;AACA,wDAAwD;AACxD,UAAU,gBAAgB,CAAC,SAAS;IAChC;AACJ;AAGA,uBAAuB;AACvB,IAAI,QAAQ;IAAC;IAAc;IAAY;IAAW;CAAe;AAEjE,SAAS,WAAW,SAAS;IACzB,MAAM,YAAY,SAAS,cAAc,CAAC;IAC1C,IAAI,cAAc,GAAG,2CAA2C;IAChE,IAAI,YAAY,GAAE,+CAA+C;IACjE,IAAI,OAAO,EAAE,EAAC,gDAAgD;IAC9D,IAAI,WAAW,OAAM,mDAAmD;IAExE,YAAY;QACR,2EAA2E;QAC3E,IAAI,gBAAgB,UAAU,MAAM,EAChC,cAAc;QAGlB,6EAA6E;QAC7E,IAAI,YAAY,SAAS,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,UAAU;YACxD,KAAK,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,GAAE,sCAAsC;YACnF;QACJ,OAAO;YACH,8DAA8D;YAC9D,KAAK,GAAG,IAAG,2CAA2C;YACtD;YACA,WAAW;YAEX,qDAAqD;YACrD,IAAI,KAAK,MAAM,KAAK,GAAG;gBACnB,WAAW;gBACX,eAAe,uCAAuC;YAE1D;QACJ;QAEA,UAAU,SAAS,GAAG,KAAK,IAAI,CAAC,KAAI,qEAAqE;IAE7G,GAAG;AACP;AACA,WAAW;AAEX,SAAS;IACL,IAAI,MAAM;IACV,OAAO,IAAI,CAAC;AAChB,EAEA,gBAAgB;CAChB,sDAAsD;CACtD,0DAA0D;CAE1D,8CAA8C;CAC9C,oBAAoB;CACpB,wCAAwC;CACxC,IAAI;CAEJ,4CAA4C;CAC5C,qBAAqB;CACrB,2CAA2C;CAC3C,IAAI","sources":["script.js"],"sourcesContent":["const mobileNav = document.querySelector(\".mobilenav\");\nconst header = document.querySelector(\".header\");\n\n\n//Here we are making a toggle using classList property.\n//when the button is clicked, the classList.toggle() method is called on the button element. \n// If the \"active\" class is already applied to the button, it will be removed. If it's not applied, it will be added.\ntoggle = () => {\n    header.classList.toggle(\"active\");\n}\n//when click on button it will call the toggle function.\nmobileNav.addEventListener(\"click\", () => {\n    toggle()\n});\n\n\n//Moving text animation\nvar stArr = [\"Developer.\", \"Thinker.\", \"Writer.\", \"Avid Reader.\"];\n\nfunction movingText(stringArr) {\n    const textSpace = document.getElementById(\"movingText\");\n    var stringIndex = 0; // Index of the current string in the array\n    var charIndex = 0;// Index of the current character in the string\n    var text = [];// Array to store the characters being displayed\n    var deleting = false;// Flag to indicate if characters are being deleted\n\n    setInterval(function () {\n        // If we have reached the end of the string array, start from the beginning\n        if (stringIndex === stringArr.length) {\n            stringIndex = 0;\n        }\n\n        // If characters are still left in the current string and we are not deleting\n        if (charIndex < stringArr[stringIndex].length && !deleting) {\n            text.push(stringArr[stringIndex][charIndex]);// Add the next character to the array\n            charIndex++;\n        } else {\n            // If we have reached the end of the string or we are deleting\n            text.pop();// Remove the last character from the array\n            charIndex--;\n            deleting = true;\n\n            // If all characters have been deleted from the array\n            if (text.length === 0) {\n                deleting = false;\n                stringIndex++; // Move to the next string in the array\n\n            }\n        }\n\n        textSpace.innerHTML = text.join(\"\");// Set the HTML content of the element to the characters in the array\n\n    }, 120)\n}\nmovingText(stArr);\n\nfunction openContact() {\n    var url = \"contact.html\";\n    window.open(url);\n}\n\n// //Moving Rays\n// const mainImg = document.querySelector(\".mainImg\");\n// const imgMe = document.querySelector(\".img-container\");\n\n// //Here we Add the 'active' class to the box\n// onHover = () => {\n//     mainImg.classList.add(\"active1\");\n// }\n\n// // Remove the 'active' class from the box\n// offHover = () => {\n//     mainImg.classList.remove(\"active1\");\n// }\n\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}